question,options,answer,explanation,topic,difficulty,chapter
What is a fundamental difference between data types and data structures?,"['Data types dictate how data is organized; data structures define the kind of data.', 'Data types define the kind of data; data structures dictate how data is organized.', 'Both define the kind of data and how it is organized.', ' Neither defines the kind of data nor how it is organized.']",B,"Data types specify the nature of data (integer, float, etc.), while data structures determine how that data is arranged in memory for efficient access (array, linked list, etc.).","Data types, data structures and abstract data types",Easy,7.1
Which of the following is NOT a characteristic of a primitive data type?,"['Represents a single value.', 'Has a predefined size.', 'Can be further broken down into smaller components.', ' Is directly supported by the programming language.']",C,Primitive data types are atomic; they cannot be decomposed into simpler units.,"Data types, data structures and abstract data types",Medium,7.1
What is an abstract data type (ADT)?,"['A specific implementation of a data structure.', 'A high-level description of a data type without specifying its implementation.', 'A type of primitive data type.', 'A type of linear data structure.']",B,"An ADT focuses on what operations can be performed on data, not how they are implemented.","Data types, data structures and abstract data types",Medium,7.1
Which category of data structures includes arrays and linked lists?,"['Non-linear data structures', 'Tree-based data structures', 'Linear data structures', 'Graph-based data structures']",C,Linear data structures store data in a sequential manner.,"Data types, data structures and abstract data types",Easy,7.1
Floating-point numbers are an example of which type of data?,"['Data structure', 'Abstract data type', 'Primitive data type', ' Non-linear data type']",C,Floating-point numbers are a fundamental data type directly supported by programming languages.,"Data types, data structures and abstract data types",Easy,7.1
Which asymptotic notation describes the best-case time complexity of an algorithm?,"['Big-O (O)', 'Big-Omega (Ω)', 'Big-Theta (Θ)', 'Little-o (o)']",B,"Big-Omega notation (Ω) provides a lower bound on the growth rate of an algorithm's runtime, representing its best-case time complexity.","Time and space analysis of algorithms (Big oh, omega and theta notations)",Medium,7.1
An algorithm's space complexity considers which types of memory allocation?,"['Only variable memory allocations', 'Only fixed memory allocations', 'Both fixed and variable memory allocations', 'Neither fixed nor variable memory allocations']",C,Space complexity accounts for both the fixed amount of memory used by the algorithm regardless of input size and the variable memory that depends on the input size.,"Time and space analysis of algorithms (Big oh, omega and theta notations)",Easy,7.1
What does Big-Theta (Θ) notation represent in algorithm analysis?,"['Worst-case time complexity', 'Best-case time complexity', 'Average-case time complexity', 'Space complexity']",C,"Big-Theta notation (Θ) provides a tight bound on the growth rate, representing the average-case time complexity of an algorithm.","Time and space analysis of algorithms (Big oh, omega and theta notations)",Medium,7.1
"If an algorithm has a time complexity of O(n^2), what does this indicate?","[""The algorithm's runtime is constant."", ""The algorithm's runtime increases linearly with input size."", ""The algorithm's runtime increases quadratically with input size."", ""The algorithm's runtime decreases with increasing input size.""]",C,O(n^2) indicates that the algorithm's runtime grows proportionally to the square of the input size (n).,"Time and space analysis of algorithms (Big oh, omega and theta notations)",Medium,7.1
Which of the following is NOT directly related to the time complexity of an algorithm?,"['Number of operations performed', 'Input size', 'Memory allocation', 'Algorithm efficiency']",C,"Memory allocation is related to space complexity, not time complexity.  Time complexity focuses on the execution time as a function of input size and the number of operations.","Time and space analysis of algorithms (Big oh, omega and theta notations)",Easy,7.1
Which data structure adheres to the Last-In-First-Out (LIFO) principle?,"['Queue', 'Linked List', 'Stack', 'Tree']",C,"A stack follows the LIFO principle, where the last element added is the first one removed.",Linear data structure (Stack and queue implementation),Easy,7.1
What is the primary operation for adding an element to a stack?,"['Enqueue', 'Dequeue', 'Push', 'Pop']",C,The 'push' operation adds an element to the top of the stack.,Linear data structure (Stack and queue implementation),Easy,7.1
A queue follows which principle for adding and removing elements?,"['Last-In-First-Out (LIFO)', 'First-In-First-Out (FIFO)', 'Random Access', 'Middle-In-First-Out (MIFO)']",B,Queues operate on the First-In-First-Out (FIFO) principle.,Linear data structure (Stack and queue implementation),Medium,7.1
Which of the following is NOT a fundamental operation performed on a stack?,"['Peek (retrieving the top element without removing)', 'Push (inserting an element)', 'Sort (arranging elements in order)', 'Pop (removing the top element)']",C,Sorting is not a fundamental operation directly associated with stack data structures. Stacks maintain order based on the LIFO principle.,Linear data structure (Stack and queue implementation),Medium,7.1
What is a characteristic of linear data structures?,"['Data is stored in a hierarchical manner.', 'Data is stored sequentially.', 'Data access is always random.', 'Data relationships are non-linear.']",B,Linear data structures store data elements in a sequential order.,Linear data structure (Stack and queue implementation),Easy,7.1
What is the primary role of a stack in infix-to-postfix conversion?,"['Storing operands directly for output.', 'Storing operators temporarily.', 'Performing arithmetic operations.', 'Evaluating the postfix expression.']",B,"In infix-to-postfix conversion, the stack's main function is to hold operators until they can be placed correctly in the postfix expression. Operands are directly outputted.","Stack application: infix to postfix conversion, and evaluation of postfix expression",Easy,7.1
"In postfix expression evaluation, what happens when an operator is encountered?","[""It's pushed onto the stack."", 'The expression is evaluated immediately.', 'The necessary operands are popped, the operation is performed, and the result is pushed.', ""It's ignored as it is redundant.""]",C,"The core of postfix evaluation involves popping operands, performing the operation indicated by the operator, and pushing the result.","Stack application: infix to postfix conversion, and evaluation of postfix expression",Medium,7.1
Which of the following data structures can be used to implement a stack?,"['Only linked lists.', 'Only arrays.', 'Arrays or linked lists.', 'Trees or graphs.']",C,"Stacks can be implemented efficiently using either arrays or linked lists, offering flexibility in memory management.","Stack application: infix to postfix conversion, and evaluation of postfix expression",Easy,7.1
"In postfix notation, where do the operands appear relative to the operator?","['After the operator.', 'Before the operator.', 'Interleaved with the operator.', 'The order is irrelevant.']",B,"Postfix notation places operands before the operator, simplifying evaluation using a stack.","Stack application: infix to postfix conversion, and evaluation of postfix expression",Easy,7.1
What is the key advantage of postfix notation in expression evaluation?,"[' Requires less memory.', ' Simplifies parenthesis handling.', 'Allows direct computation without operator precedence rules.', ' Increases the speed of compilation.']",C,"Postfix notation eliminates the need for operator precedence rules, making direct stack-based evaluation straightforward.","Stack application: infix to postfix conversion, and evaluation of postfix expression",Medium,7.1
Which data structure uses a contiguous block of memory to store elements?,"['Linked List', 'Array', 'Binary Tree', 'Hash Table']",B,"Arrays store elements in contiguous memory locations, unlike linked lists which use pointers.",Array implementation of lists,Easy,7.1
What is a key characteristic of a static list structure?,"['Dynamic memory allocation', 'Variable size', 'Fixed size at declaration', ' Unlimited element capacity']",C,"Static lists, like arrays, have a fixed size determined at the time of creation.",Array implementation of lists,Easy,7.1
In which data structure is the insertion operation performed only at one end and removal only at that same end?,"['Queue', 'Deque', 'Stack', 'Linked List']",C,"Stacks follow the LIFO (Last-In, First-Out) principle, with insertion (push) and removal (pop) happening at the top.",Array implementation of lists,Medium,7.1
Which of the following is NOT a characteristic of an array-based list implementation?,"['Sequential memory allocation', 'Fixed size', 'Dynamic memory allocation', 'Direct access to elements']",C,Array-based lists do not dynamically allocate memory; their size is fixed at creation.,Array implementation of lists,Medium,7.1
Queues utilize which principle for element processing?,"['Last-In, First-Out (LIFO)', 'First-In, First-Out (FIFO)', 'Random Access', ' Last-Accessed, First-Out (LAFO)']",B,Queues follow the FIFO principle; the first element added is the first to be removed.,Array implementation of lists,Medium,7.1
What is the primary operation for removing an element from a queue data structure?,"['Pop', 'Dequeue', 'Push', 'Enqueue']",B,"Dequeue is the operation used to remove an element from the front of a queue.  Pop is used for stacks, while push and enqueue are used for adding elements to stacks and queues respectively.",Stack and Queues as list,Easy,7.1
Which data structure is particularly useful for converting infix expressions to postfix notation?,"['Queue', 'Linked List', 'Stack', 'Tree']",C,"Stacks utilize their LIFO (Last-In, First-Out) property to effectively manage the order of operations during infix-to-postfix conversion.",Stack and Queues as list,Medium,7.1
"In a queue, where is a new element typically added?","['At the beginning', 'In the middle', 'At the end', 'The location depends on the algorithm']",C,"Queues follow a FIFO (First-In, First-Out) structure; new elements are added to the rear (end) of the queue.",Stack and Queues as list,Easy,7.1
What does FIFO stand for in the context of queue data structures?,"['First In, First Out', 'First In, Last Out', 'Last In, First Out', 'Last In, Last Out']",A,"FIFO is the fundamental principle of queue operation, meaning the first element added is the first to be removed.",Stack and Queues as list,Easy,7.1
Which of the following is NOT a common application of queues?,"['Task scheduling', 'Expression evaluation', 'Buffer management', 'Handling requests in operating systems']",B,Expression evaluation is primarily handled using stacks due to their LIFO nature.  Queues are best suited for scenarios requiring FIFO processing.,Stack and Queues as list,Medium,7.1
Which data structure offers a fixed size determined at the time of its creation and cannot be resized later?,"['Linked List', 'Dynamic Array', 'Static List', 'Queue']",C,"A static list, like an array, has a fixed size allocated during declaration, unlike dynamic data structures.",Static list structure,Easy,7.1
What is a key characteristic of a static list structure concerning memory allocation?,"['Memory is allocated dynamically during runtime.', 'Memory size can be adjusted after initial declaration.', 'Memory is allocated at compile time, but can be resized.', 'Memory is allocated at the time of declaration and remains fixed.']",D,"Static lists have a fixed size determined at the time of their creation, and this size cannot be altered.",Static list structure,Easy,7.1
Which of the following is an example of a data structure that can be implemented using a static list structure?,"['Binary Search Tree', 'Graph', 'Array', 'Hash Table']",C,Arrays are a classic example of a static list structure because they have a fixed size determined at the time of creation.,Static list structure,Medium,7.1
How does the memory management of a static list differ from a linked list?,"['Both allocate memory dynamically.', 'Both allocate memory at compile time.', 'Static lists allocate fixed memory at declaration; linked lists allocate memory dynamically.', 'Static lists allocate memory dynamically; linked lists allocate fixed memory at declaration.']",C,"Static lists have a predetermined, fixed size allocated during declaration, whereas linked lists dynamically allocate memory as needed.",Static list structure,Medium,7.1
"In the context of data structures, what distinguishes a static list from a dynamic one primarily?","['Data type of elements stored', 'Ordering of elements', 'Memory allocation mechanism', 'Number of elements allowed']",C,"The core difference lies in how memory is allocated: static lists have fixed, predetermined memory, while dynamic lists can grow or shrink as needed.",Static list structure,Easy,7.1
"Which data structure uses a fixed-size, sequential block of memory for element storage?","['Linked List', 'Queue', 'Array', 'Stack']",C,"Arrays are implemented using contiguous memory allocation, providing fixed-size storage.  Linked lists, queues, and stacks can utilize dynamic memory allocation.",Static and dynamic list structure,Easy,7.1
What is a characteristic of a static list structure?,"['Memory allocation increases as needed.', 'Memory size is adjustable after declaration.', 'Memory is allocated at declaration and cannot be changed.', 'Elements are stored non-sequentially.']",C,"Static list structures, like arrays, have a fixed size determined at the time of creation; the size cannot be altered later.",Static and dynamic list structure,Easy,7.1
Which of the following best describes a linked list's memory management?,"['Fixed-size, contiguous memory allocation.', 'Dynamic memory allocation.', 'Static memory allocation at compile time.', 'Memory is allocated only when needed.']",B,"Linked lists dynamically allocate memory as needed, unlike arrays which use static, contiguous allocation.",Static and dynamic list structure,Medium,7.1
"In the context of list implementations, what distinguishes a stack from a queue?","['Both allow insertion and deletion at any position.', 'Stacks use LIFO, queues use FIFO.', 'Stacks use FIFO, queues use LIFO.', 'Both use dynamic memory allocation exclusively.']",B,"Stacks follow Last-In, First-Out (LIFO) while queues follow First-In, First-Out (FIFO).",Static and dynamic list structure,Medium,7.1
A data structure that permits insertion only at one end and deletion only at the other end is known as a:,"['Stack', 'Tree', 'Graph', 'Queue']",D,"This describes a queue, where elements are added at the rear and removed from the front.  A stack only allows insertion and deletion at one end.",Static and dynamic list structure,Medium,7.1
Which characteristic best describes a dynamically allocated linked list?,"['Fixed size determined at compile time', 'Elements are stored contiguously in memory', 'Memory is allocated and deallocated as needed', 'Access to elements is via index only']",C,"Dynamic allocation is a key feature of linked lists, allowing them to grow or shrink as required.  Options A and B describe static arrays, while D is not a defining characteristic of linked lists.",Dynamic implementation of linked list,Easy,7.1
"In a singly linked list, what does each node typically contain?","['Only a pointer to the previous node', 'Data and a pointer to the next node', 'Data only', 'Pointers to both the next and previous nodes']",B,A node in a singly linked list stores the data element and a pointer to the next node in the sequence.  A doubly linked list would include a pointer to the previous node as well.,Dynamic implementation of linked list,Easy,7.1
What is the primary advantage of using a linked list over a static array when the number of elements is unknown beforehand?,"['Faster element access', 'More efficient use of contiguous memory', 'Easier implementation', 'Flexibility in size and memory allocation']",D,"Linked lists excel in situations where the size of the data structure is not known in advance, because memory is allocated dynamically as needed.  Static arrays require pre-allocation and cannot easily handle changes in size.",Dynamic implementation of linked list,Medium,7.1
A linked list is considered a ______ data structure.,"['Static', 'Linear', 'Non-linear', 'Hierarchical']",B,"A linked list is a linear data structure because elements are arranged sequentially. Although elements are not stored contiguously, they follow a linear order.",Dynamic implementation of linked list,Easy,7.1
Memory leaks can occur in a linked list implementation if:,"['Nodes are always deallocated after use.', 'The list is sorted efficiently.', 'Memory allocated for nodes is not freed.', 'The list is implemented using recursion.']",C,Failure to deallocate memory used by nodes after they are no longer needed results in memory leaks.  This is a significant concern with dynamic memory allocation.,Dynamic implementation of linked list,Medium,7.1
Which type of linked list allows traversal in both forward and backward directions?,"['Singly Linked List', 'Circular Linked List', 'Doubly Linked List', 'None of the above']",C,"A doubly linked list has pointers to both the next and previous nodes, enabling bidirectional traversal.",Types of Linked list,Easy,7.1
"In a circular linked list, the last node's pointer points to which node?","['The last node itself', 'A NULL value', 'The first node', 'A randomly selected node']",C,"The defining characteristic of a circular linked list is that the last node points back to the first, creating a loop.",Types of Linked list,Easy,7.1
What is a characteristic of a singly linked list that distinguishes it from a doubly linked list?,"['It uses more memory.', 'It allows bidirectional traversal.', 'It only allows traversal in one direction.', 'It is always circular.']",C,"A singly linked list only has a pointer to the next node, thus allowing traversal only in one direction.",Types of Linked list,Medium,7.1
A linked list where the last node points back to the head node is called a:,"['Doubly Linked List', 'Singly Linked List', 'Circular Linked List', 'Linear Linked List']",C,This is the definition of a circular linked list.,Types of Linked list,Easy,7.1
Which of the following is NOT a type of linked list?,"['Singly Linked List', 'Doubly Linked List', 'Binary Tree', 'Circular Linked List']",C,"A binary tree is a distinct hierarchical data structure, not a type of linked list.  Linked lists are linear structures.",Types of Linked list,Medium,7.1
What is a key advantage of linked lists compared to arrays?,"['Faster access to elements', 'More efficient sorting algorithms', 'Dynamic memory allocation', 'Fixed size allocation']",C,"Linked lists offer dynamic memory allocation, unlike arrays which have a fixed size. This allows for more flexible modifications and growth.","Basic operations on Linked list: creation of linked list, insertion of node in different positions, and deletion of nodes from different positions",Easy,7.1
"In a singly linked list, where can a new node be inserted?","['Only at the end', 'Only at the beginning', 'At the beginning, middle, or end', 'Only in the middle']",C,"New nodes can be added at the beginning, middle, or end of a singly linked list.  The exact method varies depending on the insertion point.","Basic operations on Linked list: creation of linked list, insertion of node in different positions, and deletion of nodes from different positions",Easy,7.1
Which operation involves removing a node from a linked list?,"['Insertion', 'Traversal', 'Deletion', 'Searching']",C,Deletion is the operation specifically focused on removing a node from a linked list.,"Basic operations on Linked list: creation of linked list, insertion of node in different positions, and deletion of nodes from different positions",Easy,7.1
"What is the first step in performing most linked list operations (insertion, deletion, etc.)?","['Creating a new node', 'Locating the desired position', 'Re-linking pointers', 'Allocating memory']",B,"Before inserting or deleting, you usually must first find the node before or after the target position within the linked list.","Basic operations on Linked list: creation of linked list, insertion of node in different positions, and deletion of nodes from different positions",Medium,7.1
A linked list is created by connecting nodes together using:,"['Arrays', 'Pointers', 'Stacks', 'Queues']",B,"Pointers are used to link together individual nodes in a linked list, creating a chain of data elements.","Basic operations on Linked list: creation of linked list, insertion of node in different positions, and deletion of nodes from different positions",Medium,7.1
What is a key advantage of using a doubly linked list compared to a singly linked list?,"['Faster insertion at the beginning of the list.', 'Reduced memory overhead.', 'Ability to traverse in both directions.', 'Simpler implementation.']",C,Doubly linked lists allow traversal in both forward and backward directions because each node contains pointers to both the next and previous nodes. Singly linked lists only allow forward traversal.,Doubly linked lists and its applications,Easy,7.1
In which application would a doubly linked list be particularly advantageous?,"['Implementing a queue data structure.', 'Representing a binary tree.', 'Undo/redo functionality in a text editor.', 'Managing a simple stack.']",C,"Undo/redo functionality requires the ability to move backward and forward through a sequence of actions, which is efficiently supported by the bidirectional traversal capabilities of a doubly linked list.",Doubly linked lists and its applications,Medium,7.1
What distinguishes a singly linked list from a doubly linked list?,"['The type of data stored in each node.', 'The number of nodes in the list.', 'The direction of traversal.', 'The memory allocation method.']",C,"A singly linked list allows traversal in only one direction, while a doubly linked list permits traversal in both directions.",Doubly linked lists and its applications,Easy,7.1
Which of the following is NOT a typical application of doubly linked lists?,"['Implementing a circular buffer.', 'History navigation in a web browser.', 'Managing a priority queue.', 'Implementing an undo/redo mechanism.']",C,"While priority queues can be implemented using various data structures, doubly linked lists are not inherently well-suited for the efficient priority management required by a priority queue.",Doubly linked lists and its applications,Medium,7.1
Node deletion in a doubly linked list requires updating which pointers?,"['Only the next pointer of the preceding node.', 'Only the previous pointer of the succeeding node.', 'Both the next pointer of the preceding node and the previous pointer of the succeeding node.', ' Only the pointer within the node being deleted.']",C,"To maintain the integrity of the list after deletion, both the next and previous pointers of the adjacent nodes need to be updated to bypass the deleted node.",Doubly linked lists and its applications,Medium,7.1
What is the maximum number of children a node can have in a binary tree?,"['One', 'Two', 'Three', 'Unlimited']",B,"By definition, a binary tree allows each node to have at most two children.",Concept of Tree,Easy,7.1
Which of the following is NOT a common operation performed on a binary tree?,"['Insertion', 'Deletion', 'Sorting', 'Searching']",C,"While trees can be used to support sorted data, sorting itself is not a direct operation *on* the tree structure in the same way insertion, deletion, and searching are.",Concept of Tree,Medium,7.1
In what areas are trees commonly used as data structures?,"[' Only in database indexing', ' Database indexing and file systems only', 'Database indexing, file systems, and artificial intelligence', ' Database indexing, file systems, artificial intelligence, and hierarchical data representation.']",D,The passage explicitly mentions all four areas as applications of tree data structures.,Concept of Tree,Easy,7.1
"What is the primary purpose of a ""search"" operation in a binary tree?","['To add a new node to the tree.', 'To remove a node from the tree.', 'To determine if a specific value exists within the tree.', 'To rearrange the nodes of the tree.']",C,A search operation aims to locate a specific element within the tree's structure.,Concept of Tree,Easy,7.1
The process of adding a new node to a binary tree while maintaining its structure is called:,"['Deletion', 'Searching', 'Sorting', 'Insertion']",D,Insertion is the operation specifically related to adding new nodes.,Concept of Tree,Easy,7.1
What is the maximum number of children a node can have in a binary tree?,"['One', 'Two', 'Three', 'Unlimited']",B,"By definition, a binary tree allows each node to have at most two children.",Operation in Binary tree,Easy,7.1
Which of the following is NOT a fundamental operation typically performed on a binary tree?,"['Insertion', 'Deletion', 'Sorting', 'Searching']",C,"While binary trees can be used in sorting algorithms, sorting itself is not a direct operation performed *on* the tree structure in the same way insertion, deletion, and searching are.",Operation in Binary tree,Medium,7.1
"What is the primary purpose of a ""search"" operation in a binary tree?","['To add a new node to the tree.', 'To remove a node from the tree.', 'To determine if a specific value exists within the tree.', 'To rearrange the nodes of the tree.']",C,Searching aims to locate a particular element within the binary tree's structure.,Operation in Binary tree,Easy,7.1
"In the context of binary trees, what does the term ""insertion"" refer to?","['Removing a node from the tree.', 'Finding a specific node in the tree.', 'Adding a new node to the tree while maintaining its structure.', 'Re-ordering the nodes in the tree.']",C,Insertion involves adding a new node while preserving the tree's properties.,Operation in Binary tree,Easy,7.1
"A binary tree's efficiency in searching, insertion, and deletion operations is highly dependent on its:","['Number of leaves', 'Height or depth', 'Number of nodes at each level', 'Total number of nodes']",B,The height (or depth) of a binary tree significantly impacts the time complexity of these operations.  A balanced tree (low height) offers better performance than a skewed tree (high height).,Operation in Binary tree,Medium,7.1
What is the maximum number of children a node can have in a binary tree?,"['One', 'Two', 'Three', 'Unlimited']",B,"By definition, a binary tree allows each node to have at most two children.",Tree search,Easy,7.1
Which of the following is NOT a common operation performed on a binary tree?,"['Insertion', 'Deletion', 'Sorting', 'Searching']",C,"While binary trees can be used in sorting algorithms, sorting itself is not a direct operation performed *on* the tree structure like insertion, deletion, and searching.",Tree search,Medium,7.1
"In the context of tree data structures, what does ""searching"" refer to?","[' Finding the height of the tree.', ' Determining if a specific value exists within the tree.', ' Sorting the nodes alphabetically.', ' Counting the number of nodes in the tree.']",B,Searching in a tree involves checking if a particular value or key is present among the nodes.,Tree search,Easy,7.1
"Besides database indexing and file systems, where else are trees commonly utilized?","['Network topology design', 'Linear programming', 'Artificial intelligence', 'Statistical analysis']",C,Trees are fundamental data structures in artificial intelligence for various algorithms and representations.,Tree search,Medium,7.1
"What is the primary purpose of the ""insertion"" operation in a binary tree?","['Removing a node from the tree.', ""Adding a new node while preserving the tree's structure."", 'Finding the largest node in the tree.', 'Re-arranging the nodes to balance the tree.']",B,Insertion involves adding a new node to the tree while maintaining the properties of a binary tree.,Tree search,Easy,7.1
What is the maximum number of children a node can have in a binary tree?,"['One', 'Two', 'Three', 'Unlimited']",B,"By definition, a binary tree node can have at most two children.",Insertion/deletions in Binary Tree,Easy,7.1
Which of the following is NOT a fundamental operation typically performed on a binary tree?,"['Insertion', 'Deletion', 'Sorting', 'Searching']",C,"While binary trees can be used in sorting algorithms, sorting itself is not a fundamental operation directly performed *on* the binary tree structure.  Insertion, deletion, and searching are core operations.",Insertion/deletions in Binary Tree,Medium,7.1
"When inserting a node into a binary tree, what needs to be maintained?","['The alphabetical order of the nodes.', ""The tree's structural properties."", 'The numerical order of the nodes.', 'The number of leaves.']",B,"The insertion process must uphold the fundamental characteristics of a binary tree, such as the parent-child relationships and the maximum number of children per node.",Insertion/deletions in Binary Tree,Medium,7.1
Deleting a node from a binary tree can potentially lead to what kind of structural change?,"['No change.', 'Changes in the height of the tree.', 'Only changes in the number of leaves.', 'Only changes in the number of internal nodes.']",B,"Removing a node can affect the overall structure and the height of the tree, depending on the node's position and the algorithm used for deletion.",Insertion/deletions in Binary Tree,Medium,7.1
What is the primary purpose of searching in a binary tree?,"['To arrange nodes alphabetically.', 'To determine if a specific element exists.', 'To calculate the height of the tree.', 'To count the number of nodes.']",B,Searching a binary tree is done to check for the presence or absence of a particular value within the tree's nodes.,Insertion/deletions in Binary Tree,Easy,7.1
Which tree traversal method visits the root node after visiting both its left and right subtrees?,"['Pre-order traversal', 'In-order traversal', 'Post-order traversal', 'Level-order traversal']",C,"Post-order traversal follows the order: left subtree, right subtree, then root.","Tree traversals (pre-order, post-order and in-order)",Easy,7.1
"In a binary tree, what is the order of node visits in a pre-order traversal?","['Left subtree, root, right subtree', 'Root, left subtree, right subtree', 'Left subtree, right subtree, root', 'Right subtree, left subtree, root']",B,Pre-order traversal prioritizes the root node before visiting its subtrees.,"Tree traversals (pre-order, post-order and in-order)",Easy,7.1
What is the order of node visits in an in-order traversal of a binary tree?,"['Root, left subtree, right subtree', 'Left subtree, root, right subtree', 'Left subtree, right subtree, root', 'Right subtree, root, left subtree']",B,"In-order traversal visits the left subtree completely, then the root, and finally the right subtree.","Tree traversals (pre-order, post-order and in-order)",Easy,7.1
"Consider a binary tree with root node R, left subtree L, and right subtree R. Which traversal method would visit the nodes in the order L, R, then R?","['Pre-order traversal', 'In-order traversal', 'Post-order traversal', 'Breadth-first traversal']",C,Post-order traversal visits the left and right subtrees before the root node.,"Tree traversals (pre-order, post-order and in-order)",Medium,7.1
Which of the following statements is TRUE regarding tree traversals?,"['Pre-order and post-order traversals always produce the same output.', 'In-order traversal always produces a sorted sequence for a Binary Search Tree.', 'Post-order traversal visits the root node before any of its children.', 'Pre-order traversal visits the right subtree before the left subtree.']",B,In-order traversal of a Binary Search Tree results in a sorted sequence of nodes.,"Tree traversals (pre-order, post-order and in-order)",Medium,7.1
What is the height of a tree in the context of tree data structures?,"['The number of nodes in the tree.', 'The longest path from the root node to a leaf node.', 'The average distance from the root to all leaf nodes.', 'The number of levels in the tree.']",B,The height of a tree is defined as the length of the longest path from the root to a leaf node.,"Height, level and depth of a tree",Easy,7.1
A node is at level three in a tree. What does this mean?,"['It is a leaf node.', 'It is the root node.', 'It is three levels away from a leaf node.', 'It is three levels away from the root node.']",D,"The level of a node indicates its distance from the root node, with the root at level zero.","Height, level and depth of a tree",Easy,7.1
What is the level of the root node in a tree?,"['1', 'The height of the tree', '0', 'Undefined']",C,"By definition, the root node is at level 0.","Height, level and depth of a tree",Easy,7.1
Which of the following best describes the relationship between the height and depth of a tree?,"['Depth is always greater than height.', 'Height and depth are always equal.', 'Height is the maximum depth of any node in the tree.', 'Depth is the maximum height of any node in the tree']",C,The height of a tree represents the maximum depth of any node within that tree.,"Height, level and depth of a tree",Medium,7.1
"In a tree with a height of 5, what is the maximum possible level of a node?","['4', '5', '6', '0']",A,"Since the root is at level 0, a tree of height 5 has nodes at levels 0, 1, 2, 3, 4, and 5. The maximum level is therefore 4.","Height, level and depth of a tree",Medium,7.1
What is the maximum height difference allowed between the left and right subtrees of any node in an AVL tree?,"['Two', 'Three', 'One', 'Zero']",C,The defining characteristic of an AVL tree is that the height difference between the left and right subtrees of any node is at most one.,AVL balanced trees,Easy,7.1
Which of the following data structures is an AVL tree categorized as?,"[' Linear data structure', ' Self-balancing binary search tree', ' Graph', ' Hash table']",B,"An AVL tree is a type of self-balancing binary search tree.  This self-balancing property ensures efficient search, insertion, and deletion operations.",AVL balanced trees,Easy,7.1
What operation is performed on an AVL tree to maintain its balance when the height difference between subtrees exceeds the allowed limit?,"[' Insertion only', ' Deletion only', ' Rotations', ' Hashing']",C,Rotations (single or double) are performed to rebalance the tree and maintain the height difference constraint.,AVL balanced trees,Medium,7.1
"In an AVL tree, the depth of a node is defined as:","['The number of nodes from the root to that node.', 'The number of edges from the root to that node.', 'The number of children of that node.', 'The total number of nodes in the subtree rooted at that node.']",B,The depth of a node is the number of edges along the path from the root to that node.,AVL balanced trees,Easy,7.1
What is a common application area where AVL trees are used due to their efficiency in searching and sorting?,"[' Network routing', ' Image compression', ' Database indexing', ' Cryptography']",C,AVL trees' efficient search and sorting capabilities make them well-suited for database indexing.,AVL balanced trees,Medium,7.1
