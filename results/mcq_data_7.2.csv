question,options,answer,explanation,topic,difficulty,chapter
What distinguishes internal sorting from external sorting in data processing?,"['The use of different sorting algorithms.', 'The location of the data to be sorted (main memory vs. auxiliary storage).', 'The size of the data sets being sorted.', 'The type of data being sorted (numerical vs. alphabetical).']",B,"Internal sorting operates on data residing in main memory, while external sorting handles data stored in auxiliary storage like disks or tapes due to its size exceeding main memory capacity.",Types of sorting: internal and external,Easy,7.2
A sorting algorithm is considered stable if:,"['It sorts data in ascending order only.', 'It always completes sorting within a fixed time.', 'It maintains the relative order of records with equal keys.', 'It uses minimal memory during the sorting process.']",C,"A stable sort preserves the original order of elements with identical keys.  If two elements have the same key, their order in the sorted list will be the same as their order in the unsorted list.",Types of sorting: internal and external,Medium,7.2
Which of the following is an example of a comparison-based sorting algorithm mentioned in the provided context?,"['Merge Sort', 'Radix Sort', 'Counting Sort', 'Exchange Sort']",D,"The passage explicitly mentions ""Exchange sort"" as a comparison-based sorting algorithm.",Types of sorting: internal and external,Easy,7.2
"In the context of sorting, what is a 'key'?","['The position of an element in a list.', 'A unique identifier assigned to each element.', 'The algorithm used to perform the sorting.', 'The size of the data to be sorted.']",B,"While not explicitly defined, the context implies a 'key' is used to compare and order elements during sorting, suggesting it's a unique identifier or value used for comparison.",Types of sorting: internal and external,Medium,7.2
What is a common characteristic of data processed using external sorting?,"['It consists entirely of numerical data.', 'It is stored in a relational database.', 'It exceeds the capacity of the main memory.', 'It is always sorted in descending order.']",C,"External sorting is necessitated when the data volume surpasses the main memory's capacity, requiring the use of auxiliary storage devices.",Types of sorting: internal and external,Easy,7.2
What is the best-case time complexity of Insertion Sort?,"['O(n^2)', 'O(log n)', 'O(n)', 'O(1)']",C,"Insertion Sort achieves O(n) time complexity in its best-case scenario, which occurs when the input array is already sorted.",Insertion and selection sort,Easy,7.2
"In the worst-case scenario, how many comparisons does Selection Sort perform for a list of size N?","['N', 'N-1', 'N(N-1)/2', 'N^2']",C,"Selection Sort performs N(N-1)/2 comparisons in the worst, average, and best cases.",Insertion and selection sort,Medium,7.2
Which sorting algorithm is generally considered more efficient when the input list is nearly sorted?,"['Selection Sort', 'Insertion Sort', 'Merge Sort', 'Quick Sort']",B,"Insertion Sort excels when the input list is almost sorted, as it requires fewer comparisons and shifts.",Insertion and selection sort,Easy,7.2
What is the space complexity of both Insertion Sort and Selection Sort?,"['O(n)', 'O(log n)', 'O(1)', 'O(n^2)']",C,"Both algorithms are in-place sorting algorithms, meaning they require constant extra space.",Insertion and selection sort,Easy,7.2
What is a significant disadvantage of Insertion Sort?,"['High space complexity', 'Excessive data swapping', 'Many comparisons in best-case scenarios', ' A large amount of shifting of sorted elements when inserting later elements']",D,Insertion Sort's main drawback is the considerable shifting of already sorted elements when placing later elements.,Insertion and selection sort,Medium,7.2
What is a stable sort algorithm in the context of sorting records with identical keys?,"['An algorithm that always sorts records in ascending order.', 'An algorithm that guarantees that the relative order of records with the same key remains unchanged.', 'An algorithm that sorts records based solely on their key values, ignoring other attributes.', 'An algorithm that prioritizes speed over maintaining the original order of records.']",B,A stable sort preserves the original relative order of elements with equal keys.,Exchange sort,Medium,7.2
Which of the following best describes internal sorting?,"['Sorting records stored on a hard drive.', 'Sorting records stored in the main memory.', 'Sorting records using external memory only.', 'Sorting records using a combination of main memory and external storage.']",B,Internal sorting involves processing all data within the computer's main memory.,Exchange sort,Easy,7.2
What is the fundamental characteristic of an exchange sort?,"[""It's a non-comparison-based sorting algorithm."", ""It's a distribution-based sorting algorithm."", ""It's a comparison-based sorting algorithm."", ""It's a radix-based sorting algorithm.""]",C,The passage explicitly states that exchange sort is comparison-based.,Exchange sort,Easy,7.2
"In a stable sort, what happens to the relative order of records with identical keys?","['Their order is reversed.', 'Their order is randomized.', 'Their order is unpredictable.', 'Their order is preserved.']",D,A key feature of a stable sort is the maintenance of the original relative order of elements with equal keys.,Exchange sort,Medium,7.2
What is the primary difference between internal and external sorting?,"['The type of data being sorted.', 'The use of comparison-based algorithms.', 'The location where the data is stored during sorting.', 'The speed at which the sorting occurs.']",C,"Internal sorting uses main memory, while external sorting involves auxiliary storage (like disks or tapes) because the data set is too large to fit in main memory.",Exchange sort,Easy,7.2
What is the fundamental principle behind Radix Sort?,"['Comparing pairs of elements repeatedly.', 'Dividing the data into smaller sub-arrays recursively.', 'Sorting based on the digits of numbers in positional representation.', 'Building a binary tree structure to organize the data.']",C),"Radix sort uses the digits of the numbers to sort them, starting from the least significant digit.",Merge and Radix sort,Easy,7.2
"In Radix Sort, the sorting process begins with which digit?","['The most significant digit.', 'The middle digit.', 'A randomly selected digit.', 'The least significant digit.']",D),"The algorithm iteratively sorts based on each digit, starting from the rightmost (least significant) digit.",Merge and Radix sort,Easy,7.2
What is the typical time complexity of Radix Sort (assuming a fixed number of digits)?,"['O(n log n)', 'O(n^2)', 'O(n)', 'O(log n)']",C),"Radix sort has a linear time complexity, O(n), when the number of digits is fixed.",Merge and Radix sort,Medium,7.2
"In Radix Sort, how are numbers with the same digit value at a given position handled?","['They are ignored.', 'They are sorted randomly.', 'They maintain their relative order from the previous iteration.', 'They are always placed at the beginning of the list.']",C),The algorithm preserves the relative order of numbers with the same digit value from one iteration to the next.,Merge and Radix sort,Medium,7.2
Which of the following data structures is commonly used in the implementation of Radix Sort?,"['Binary Search Tree', 'Heap', 'Queues', 'Linked List']",C),Queues are often utilized to store numbers based on their digit values during each iteration.,Merge and Radix sort,Medium,7.2
What is the time complexity of restoring the heap property after inserting a new element into a heap?,"['O(n)', 'O(1)', 'O(log n)', 'O(n log n)']",C,"Inserting into a heap requires shifting the new element up the heap, which takes O(log n) time in the worst case.  Restoring the heap property after insertion also involves this upward shift.",Shell sort,Medium,7.2
Which sorting algorithm offers a significant improvement over simple insertion sort?,"['Bubble Sort', 'Selection Sort', 'Merge Sort', 'Shell Sort']",D,The passage explicitly states that Shell Sort provides a significant improvement over simple insertion sort.,Shell sort,Easy,7.2
"In the context of priority queues implemented as heaps, what is the time complexity for both insertion and deletion operations?","['O(n)', 'O(1)', 'O(log n)', 'O(n^2)']",C,The passage highlights that heap-based priority queues guarantee logarithmic time complexity for both insertions and deletions.,Shell sort,Medium,7.2
What is another name for Shell Sort?,"[' Diminishing Increment Sort', ' Bubble Sort', ' Merge Sort', ' Quick Sort']",A,"The passage refers to Shell Sort as ""diminishing increment sort.""",Shell sort,Easy,7.2
What data structure is advantageous for implementing a priority queue when dealing with large datasets?,"[' Linked List', ' Array', ' Heap', ' Stack']",C,The passage states that implementing a priority queue as a heap is advantageous for large n (large datasets) due to its efficient representation and logarithmic time complexity for insertions and deletions.,Shell sort,Medium,7.2
What is the time complexity of removing an item from a priority queue implemented using a sorted contiguous list?,"['O(n)', 'O(log n)', 'O(1)', 'O(n log n)']",C) O(1),"In a sorted contiguous list, the item with the largest (or smallest) key is at either end, allowing for O(1) removal.",Heap sort as a priority queue,Easy,7.2
Which of the following best describes a priority queue?,"['A data structure that follows FIFO (First-In, First-Out)', 'A data structure that allows only insertion of elements.', 'A data structure where elements are retrieved based on priority.', 'A data structure implementing LIFO (Last-In, First-Out)']",C) A data structure where elements are retrieved based on priority.,"A priority queue retrieves elements based on their priority, not their order of insertion.",Heap sort as a priority queue,Easy,7.2
What is the time complexity of inserting an item into a priority queue implemented using an unsorted list?,"['O(n log n)', 'O(log n)', 'O(n)', 'O(1)']",D) O(1),"Inserting into an unsorted list takes constant time, O(1).",Heap sort as a priority queue,Easy,7.2
A heap data structure is particularly efficient for implementing a priority queue because:,"['It guarantees O(1) insertion and deletion.', 'It inherently sorts the elements in ascending order.', 'The highest (or lowest) priority element is readily accessible.', 'It requires minimal memory allocation.']",C) The highest (or lowest) priority element is readily accessible.,The root of a heap always contains the highest (max-heap) or lowest (min-heap) priority element.,Heap sort as a priority queue,Medium,7.2
"If a priority queue is implemented using an unsorted list, which operation has a time complexity of O(n)?","['Insertion', 'Deletion', 'Searching', 'Both Insertion and Deletion']",B) Deletion,Removing the highest or lowest priority item from an unsorted list requires searching through the entire list.,Heap sort as a priority queue,Medium,7.2
"What is the average-case time complexity of QuickSort, expressed using Big O notation?","['O(n)', 'O(log n)', 'O(n log n)', 'O(n^2)']",C,The average-case time complexity of QuickSort is O(n log n).,Big ‘O’ notation and Efficiency of sorting,Medium,7.2
"In the worst-case scenario, what is the time complexity of QuickSort?","['O(n)', 'O(log n)', 'O(n log n)', 'O(n^2)']",D,"In the worst-case scenario, QuickSort has a time complexity of O(n^2).",Big ‘O’ notation and Efficiency of sorting,Medium,7.2
Which sorting algorithm is also mentioned in the provided context that utilizes a divide and conquer approach?,"['Bubble Sort', 'Insertion Sort', 'Merge Sort', 'Selection Sort']",C,The passage explicitly mentions Merge Sort as another algorithm using the divide and conquer approach.,Big ‘O’ notation and Efficiency of sorting,Easy,7.2
What does Big O notation describe in the context of algorithms?,"['The exact number of steps an algorithm takes.', 'The amount of memory an algorithm uses.', ""The growth rate of an algorithm's runtime as input size increases."", 'The programming language used to implement the algorithm.']",C,"Big O notation characterizes the growth rate of an algorithm's runtime with respect to the input size, not the exact number of steps.",Big ‘O’ notation and Efficiency of sorting,Medium,7.2
What is the average-case time complexity for the number of swaps in QuickSort?,"['O(n^2)', 'O(n log n)', 'O(n)', 'O(log n)']",B,The passage states that the average-case time complexity for the number of swaps (interchanges) in QuickSort is O(n log n).,Big ‘O’ notation and Efficiency of sorting,Medium,7.2
What is the fundamental requirement for performing a binary search on a dataset?,"['The dataset must be sorted.', 'The dataset must be unsorted.', 'The dataset must contain only numerical values.', 'The dataset must contain only unique values.']",A),Binary search relies on the sorted nature of the data to efficiently eliminate half the search space with each comparison.,Search technique,Easy,7.2
"In a binary search, what element is initially examined to determine the next search sub-range?","['The first element', 'The last element', 'A randomly selected element', 'The middle element']",D),The core of binary search involves repeatedly dividing the search space in half by examining the middle element.,Search technique,Easy,7.2
"Compared to a linear search, what is a significant advantage of a binary search?","['It requires less memory.', 'It is simpler to implement.', 'It works faster on unsorted data.', 'It requires fewer comparisons on average.']",D),"Binary search significantly reduces the number of comparisons needed, resulting in faster search times compared to a linear search, especially for large datasets.",Search technique,Medium,7.2
What is the worst-case time complexity of a binary search algorithm?,"['O(n)', 'O(log n)', 'O(n^2)', 'O(1)']",B),"In the worst case, a binary search will require log₂n comparisons, where n is the number of elements.",Search technique,Medium,7.2
Which of the following statements is TRUE regarding binary search?,"[' It is suitable for unsorted arrays.', ""It guarantees finding an element even if it's not present."", ' It has a worst-case time complexity of linear order.', 'It requires a sorted input array.']",D),Binary search's efficiency hinges on the sorted nature of the data; it wouldn't function correctly without a sorted array.,Search technique,Easy,7.2
What is the best-case number of comparisons in a successful sequential search of a list with 'n' elements?,"['n', '(n+1)/2', 'n-1', '1']",D,"In the best-case scenario of a sequential search, the target element is found at the very first position, requiring only one comparison.",Sequential search,Easy,7.2
"In a sequential search, what is the order of the number of comparisons in the worst-case scenario?","['O(log n)', 'O(1)', 'O(n)', 'O(n^2)']",C,"The worst-case scenario for a sequential search occurs when the target element is not found or is located at the very end of the list, resulting in 'n' comparisons.  This is linear time complexity, denoted as O(n).",Sequential search,Easy,7.2
What is the average number of comparisons needed for a successful sequential search in a list of 'n' elements?,"['n', '1', '(n+1)/2', 'n/2']",C,"On average, a successful sequential search will require (n+1)/2 comparisons.",Sequential search,Medium,7.2
"In a sequential search algorithm, how is the search terminated when the target element is not found?","['When the beginning index exceeds the ending index.', 'When the middle index equals the target element.', 'When the beginning index equals the ending index.', 'When the middle index is less than the target element.']",A,"The algorithm continues until the beginning index (beg) becomes greater than the ending index (end), indicating that the target element is not present in the list.",Sequential search,Medium,7.2
What is the time complexity of a sequential search algorithm?,"['O(log n)', 'O(n log n)', 'O(n)', 'O(1)']",C,"Sequential search has a linear time complexity of O(n), meaning the time it takes increases linearly with the number of elements in the list.",Sequential search,Easy,7.2
What is the fundamental requirement for a binary search algorithm to function correctly?,"['The array must contain only unique elements.', 'The array must be sorted in ascending or descending order.', 'The array must have an even number of elements.', 'The array must be a power of 2 in length.']",B,"Binary search relies on repeatedly dividing the search interval in half.  This only works if the data is ordered, allowing us to eliminate half the data with each comparison.",Binary search,Easy,7.2
"In a binary search algorithm, if the target element is smaller than the middle element, what portion of the array is considered for further search?","['The entire array', 'The right half of the array', 'The left half of the array', 'The middle element is the result']",C,The algorithm eliminates the right half because all elements there are larger than the middle element (assuming ascending order).,Binary search,Easy,7.2
What is the time complexity of a binary search algorithm in the best-case scenario?,"['O(n)', 'O(log n)', 'O(n log n)', 'O(1)']",D,"In the best-case scenario, the target element is found at the middle of the array in the first comparison.",Binary search,Medium,7.2
"Which of the following search algorithms typically exhibits faster search times on large, sorted datasets compared to a linear search?","['Linear Search', 'Bubble Sort', 'Binary Search', 'Insertion Sort']",C,"Binary search has logarithmic time complexity, making it significantly faster than linear search for large, sorted datasets.",Binary search,Medium,7.2
"If a binary search is performed on an unsorted array, what is the likely outcome?","['The algorithm will return the correct result.', 'The algorithm will run faster than on a sorted array.', 'The algorithm may return an incorrect result or fail to find the element, even if present.', 'The algorithm will sort the array before searching.']",C,Binary search fundamentally relies on the array being sorted; an unsorted array will lead to unpredictable results.,Binary search,Medium,7.2
What is the maximum number of children a node can have in a binary tree?,"['One', 'Two', 'Three', 'Unlimited']",B,"By definition, a binary tree allows each node to have at most two children.",Tree search,Easy,7.2
Which of the following is NOT a common operation performed on a binary tree?,"['Insertion', 'Deletion', 'Sorting', 'Searching']",C,"While binary trees can be used to support sorting algorithms, sorting itself is not a direct operation *on* the tree structure in the same way insertion, deletion, and searching are.",Tree search,Medium,7.2
"In the context of binary trees, what does the term ""searching"" refer to?","['Finding the largest element in the tree.', 'Determining if a specific element exists within the tree.', 'Reorganizing the tree structure for optimal efficiency.', 'Adding a new node to the tree.']",B,Searching in a binary tree aims to verify the presence or absence of a particular element.,Tree search,Easy,7.2
"Besides database indexing and file systems, where else are trees commonly utilized?","['Network topology design', 'Linear programming', 'Artificial intelligence', 'Statistical hypothesis testing']",C,"Trees are a fundamental data structure used in AI algorithms, particularly in decision-making and search processes.",Tree search,Medium,7.2
"What is the primary purpose of the ""insertion"" operation in a binary tree?","['Removing a node from the tree.', 'Adding a new node while maintaining the tree structure.', 'Finding a specific node in the tree.', 'Reordering the nodes alphabetically.']",B,Insertion adds a new node to the tree while ensuring the tree remains a valid binary tree structure.,Tree search,Easy,7.2
What is the maximum number of children a node can have in a binary tree?,"['One', 'Two', 'Three', 'Unlimited']",B,"By definition, a binary tree allows each node to have at most two children.",General search tree,Easy,7.2
Which of the following is NOT a typical operation performed on a binary tree?,"['Insertion', 'Deletion', 'Sorting', 'Searching']",C,"While binary trees can be used to support sorting algorithms, sorting itself is not a direct operation performed *on* the tree structure in the same way insertion, deletion, and searching are.",General search tree,Medium,7.2
In what areas are trees frequently utilized as data structures?,"['Only in artificial intelligence.', 'Database indexing and file systems only.', 'Database indexing, file systems, artificial intelligence, and hierarchical data representation.', ' Exclusively in hierarchical data representation.']",C,"The passage explicitly mentions the use of trees in database indexing, file systems, AI, and hierarchical data representation.",General search tree,Easy,7.2
What is the primary purpose of a search operation within a binary tree?,"['To add a new node.', 'To remove a node.', 'To determine if a specific element is present.', ""To rearrange the tree's structure.""]",C,Searching in a binary tree aims to find if a given element exists within the tree's structure.,General search tree,Easy,7.2
The process of adding a new node to a binary tree while maintaining its structure is known as:,"['Searching', 'Deletion', 'Traversal', 'Insertion']",D,Insertion is the operation that adds a new node to a binary tree while maintaining its properties.,General search tree,Easy,7.2
What is the primary purpose of a hash function in the context of hash tables?,"['To sort keys alphabetically.', 'To encrypt keys for security.', 'To transform a key into a hash table index.', 'To compress keys for storage efficiency.']",C) To transform a key into a hash table index.,The core function of a hash function is to map keys to their corresponding locations within the hash table for efficient data retrieval.,Hashing: Hash function and hash tables,Easy,7.2
Which of the following is NOT typically considered a popular hash function?,"['Folding method', 'Mid-square method', 'Division method', 'Bubble Sort']",D) Bubble Sort,"Bubble Sort is a sorting algorithm, not a hashing function.  Folding, Mid-square, and Division are common hash function methods.",Hashing: Hash function and hash tables,Easy,7.2
"Given a key 'k' and a hash function 'H', what is H(k) referred to as?","['Hash key', 'Hash table', 'Hash-of-key', 'Hash algorithm']",C) Hash-of-key,"H(k) represents the result of applying the hash function H to the key k, which is the hash-of-key.",Hashing: Hash function and hash tables,Medium,7.2
The process of using a hash function to determine the location of a key in a hash table is known as:,"['Key generation', 'Hashing', 'Sorting', 'Indexing']",B) Hashing,Hashing is the overall process of using a hash function to map keys to locations in a hash table.,Hashing: Hash function and hash tables,Easy,7.2
What type of input does a hash function typically accept?,"['A hash table index', 'A sorted list of keys', 'A key', 'An encrypted message']",C) A key,Hash functions take a key as input to produce a hash table index.,Hashing: Hash function and hash tables,Easy,7.2
What is the primary purpose of a collision resolution technique in hashing?,"['To increase the size of the hash table.', 'To reduce the number of collisions during hashing.', 'To efficiently handle situations where two or more keys map to the same hash table index.', 'To improve the speed of key insertion.']",C),Collision resolution techniques are specifically designed to address the problem of multiple keys mapping to the same hash table index (collision).  The other options are not the primary purpose.,Collision resolution technique,Easy,7.2
Which of the following is a simple collision resolution technique that involves placing the colliding element in the next available slot?,"['Quadratic probing', 'Double hashing', 'Chaining', 'Linear probing']",D),"Linear probing is the simplest method, sequentially searching for the next available slot.  The other options are more sophisticated techniques.",Collision resolution technique,Easy,7.2
"In the context of hash tables, what is ""probing""?","['A method for encrypting hash keys.', 'The process of searching for an available slot when a collision occurs.', 'A type of hash function.', 'A technique to delete elements from a hash table.']",B),Probing refers to the search for an empty slot in the hash table when a collision happens.,Collision resolution technique,Medium,7.2
Which collision resolution technique uses a second hash function to determine the next probing position?,"['Linear probing', 'Quadratic probing', 'Chaining', 'Double hashing']",D),Double hashing uses a secondary hash function to determine the step size when probing for an open slot.,Collision resolution technique,Medium,7.2
"Chaining, as a collision resolution technique, utilizes which data structure to handle collisions?","['Arrays', 'Stacks', 'Linked Lists', 'Queues']",C),"Chaining resolves collisions by creating a linked list at each index of the hash table, allowing multiple elements to occupy the same index.",Collision resolution technique,Medium,7.2
What is the indegree of a vertex in a directed graph?,"['The number of edges leaving the vertex', 'The number of edges entering the vertex', 'The total number of edges connected to the vertex', 'The number of vertices adjacent to the vertex']",B,The indegree of a vertex is defined as the number of edges directed into that vertex.,Undirected and Directed Graphs,Easy,7.2
"In an undirected graph, what is the relationship between the number of edges and the sum of degrees of all vertices?","['The sum of degrees is half the number of edges.', 'The sum of degrees is equal to the number of edges.', 'The sum of degrees is twice the number of edges.', 'There is no defined relationship.']",C,"Each edge contributes 2 to the sum of degrees (one for each endpoint). Therefore, the sum of degrees is twice the number of edges.",Undirected and Directed Graphs,Medium,7.2
Which of the following is true for a directed graph?,"['The indegree of a vertex is always equal to its outdegree.', 'The sum of indegrees equals the sum of outdegrees.', ' All vertices have the same indegree.', 'All vertices have the same outdegree.']",B,"In any directed graph, the total number of edges entering vertices (sum of indegrees) must equal the total number of edges leaving vertices (sum of outdegrees).",Undirected and Directed Graphs,Medium,7.2
What distinguishes an undirected graph from a directed graph?,"['The number of vertices', 'The presence or absence of loops', 'The presence or absence of edge directions', 'The number of edges']",C,"The key difference lies in whether the edges have a specified direction.  Undirected graphs have edges without direction, while directed graphs have edges with a specified direction.",Undirected and Directed Graphs,Easy,7.2
"If a directed graph has a vertex with an indegree of zero, what can you conclude?","['The vertex is connected to every other vertex.', 'The vertex has no incoming edges.', 'The vertex has no outgoing edges.', 'The graph is not a strongly connected graph.']",B,An indegree of zero means no edges are directed into that vertex.,Undirected and Directed Graphs,Medium,7.2
"What is a graph, in the context of data structures?","['A linear data structure where elements are arranged sequentially.', 'A hierarchical data structure resembling a tree.', 'A non-linear data structure representing relationships between elements.', 'A data structure primarily used for numerical computations.']",C),A graph is a non-linear data structure that represents relationships or connections between elements (vertices or nodes) using edges or arcs.,Representation of Graph,Easy,7.2
"A graph G is defined as G = (V, E). What do V and E represent?","['V represents edges; E represents vertices.', 'V represents algorithms; E represents data structures.', 'V represents vertices; E represents edges.', 'V represents functions; E represents variables.']",C),"In graph theory, V represents the set of vertices (nodes) and E represents the set of edges (connections) between vertices.",Representation of Graph,Easy,7.2
What is an edge in a graph also known as?,"['A node', 'A vertex', 'An arc', 'A branch']",C),An edge in a graph is also referred to as an arc.,Representation of Graph,Easy,7.2
Which of the following best describes the nature of the set of vertices (V) in a graph?,"['An empty set', 'An infinite set', 'A finite, non-empty set', 'A set containing only one element']",C),The definition of a graph specifies that the set of vertices (V) is finite and non-empty.,Representation of Graph,Medium,7.2
"In the definition of a graph G = (V, E), what does the notation (v, w) ∈ E represent where v and w are elements of V?","['A disjoint set', 'A directed edge from v to w.', 'An undirected edge connecting v and w.', ' A relationship between v and w where the order is not important.']",C),"The notation (v,w) ∈ E, without any further specification, implies an undirected edge connecting vertices v and w. While the question doesn't say if the graph is directed, if it is, B would also be correct.  However, given only the information provided in the question, we can only conclude it is an undirected edge, representing a connection without a specified direction.",Representation of Graph,Medium,7.2
What is the time complexity of finding the transitive closure of a graph using a naive approach as described in the passage?,"['O(n^2)', 'O(n^3)', 'O(n^4)', 'O(n log n)']",C,The passage explicitly states that a naive approach to finding the transitive closure takes O(n^4) time.,Transitive closure of graph,Easy,7.2
"In the context of finding paths between nodes in a directed graph, what does the notation 'adjmaxnodes1' likely represent?","['The maximum number of nodes in the graph.', 'The adjacency matrix representing the connections between nodes after considering all possible paths of length 1.', 'The adjacency matrix representing the connections between nodes after considering all possible path lengths.', 'The maximum degree of any node in the graph.']",C,"The passage suggests checking adj1, adj2, adj3... to find paths. 'adjmaxnodes1' likely refers to checking adjacency matrices after considering paths of all possible lengths (up to the maximum possible path length).",Transitive closure of graph,Medium,7.2
"A path exists between nodes 'i' and 'j' in a directed graph if which condition is met, according to the passage's described method?","[""The adjacency matrix for paths of length one shows a connection between 'i' and 'j'."", ""The adjacency matrix for the shortest path shows a connection between 'i' and 'j'."", ""At least one of the adjacency matrices (for paths of varying lengths) shows a connection between 'i' and 'j'."", ""All adjacency matrices show a connection between 'i' and 'j'.""]",C,"The passage explains that checking adj1, adj2, adj3... until adjmaxnodes1 determines if a path exists.  A path exists if ANY of these adjacency matrices show a connection.",Transitive closure of graph,Easy,7.2
What does the variable 'm' represent in the passage's description of finding paths between nodes?,"['The number of edges in the graph.', 'The total number of nodes in the graph.', 'The highest order (length) of a path considered.', 'The minimum degree of any node in the graph.']",C,The passage explicitly defines 'm' as the highest order of path length.,Transitive closure of graph,Easy,7.2
The method described in the passage for determining if a path exists between two nodes is based on examining what data structure?,"['Linked Lists', 'Binary Trees', 'Adjacency Matrices', 'Hash Tables']",C,"The passage repeatedly refers to ""adjacency matrices"" (adj1, adj2, etc.) as the means of determining path existence.",Transitive closure of graph,Easy,7.2
What is the time complexity of Warshall's algorithm for calculating transitive closure?,"['O(n log n)', 'O(n²)', 'O(n³)', 'O(2ⁿ)']",C,"Warshall's algorithm has a cubic time complexity, specifically O(n³), where 'n' represents the number of vertices in the graph.",Warshall’s algorithm,Easy,7.2
Warshall's algorithm operates on what type of matrix as input?,"[' A floating-point matrix', 'A character matrix', 'A Boolean matrix (zero-one matrix)', 'An adjacency list']",C,"Warshall's algorithm specifically works with a zero-one matrix, representing the adjacency matrix of a graph.",Warshall’s algorithm,Easy,7.2
The result of Warshall's algorithm is:,"['A shortest path tree', 'A minimum spanning tree', 'The transitive closure', 'A topological sort']",C,The primary output of Warshall's algorithm is the transitive closure of the input graph's adjacency matrix.,Warshall’s algorithm,Medium,7.2
A topological sort is applicable to which type of graph?,"[' Undirected graphs', ' Directed cyclic graphs', ' Weighted directed graphs', 'Directed acyclic graphs']",D,Topological sorting is only defined and possible for Directed Acyclic Graphs (DAGs).,Warshall’s algorithm,Medium,7.2
"In a topological sort of a Directed Acyclic Graph (DAG), if there's a path from vertex 'vi' to vertex 'vj', what is the relative ordering of 'vi' and 'vj'?","[""'vj' appears before 'vi'"", ""'vi' and 'vj' can appear in any order"", ""'vi' appears before 'vj'"", 'The ordering is undefined']",C,"The definition of topological sort mandates that if there's a path from 'vi' to 'vj', then 'vi' must precede 'vj' in the sorted order.",Warshall’s algorithm,Medium,7.2
Which data structure is typically used to implement a Breadth-First Traversal (BFT) of a graph?,"['Stack', 'Queue', 'Heap', 'Linked List']",B) Queue,"BFT explores the graph level by level, requiring a FIFO (First-In, First-Out) structure like a queue.  Stacks are used in Depth-First Traversal.",Depth First Traversal and Breadth First Traversal of Graph,Easy,7.2
"In a Depth-First Traversal (DFT) of a graph, what is the primary data structure used to manage the order of vertex visits?","['Queue', 'Heap', 'Binary Tree', 'Stack']",D) Stack,"DFT explores the graph by going as deep as possible along each branch before backtracking.  A LIFO (Last-In, First-Out) structure like a stack is used to keep track of the vertices to visit.",Depth First Traversal and Breadth First Traversal of Graph,Easy,7.2
What is the key difference between Breadth-First Traversal (BFT) and Depth-First Traversal (DFT) in terms of exploration strategy?,"['BFT explores all vertices before visiting neighbors; DFT explores neighbors before all vertices are visited.', 'BFT explores neighbors before all vertices are visited; DFT explores all vertices before visiting neighbors.', 'BFT explores vertices in alphabetical order; DFT explores vertices in numerical order.', 'BFT uses recursion; DFT uses iteration.']",B) BFT explores neighbors before all vertices are visited; DFT explores all vertices before visiting neighbors.,"BFT explores all neighbors at a given level before moving to the next level, while DFT prioritizes exploring a single branch completely before backtracking.",Depth First Traversal and Breadth First Traversal of Graph,Medium,7.2
Consider a graph with cycles. Which traversal method might visit a vertex multiple times?,"['Only Breadth-First Traversal', 'Only Depth-First Traversal', 'Both Breadth-First and Depth-First Traversal, depending on implementation', 'Neither Breadth-First nor Depth-First Traversal']","C) Both Breadth-First and Depth-First Traversal, depending on implementation","Without mechanisms to mark visited vertices, both traversals could revisit nodes in graphs containing cycles.",Depth First Traversal and Breadth First Traversal of Graph,Medium,7.2
Which of the following statements accurately describes the relationship between a Depth-First Traversal and a preorder tree traversal?,"['They are completely unrelated algorithms.', 'DFT is a generalization of preorder traversal, applicable to both trees and graphs.', 'Preorder traversal is a special case of DFT, only applicable to trees.', 'DFT and preorder traversal use different data structures but produce identical results.']","B) DFT is a generalization of preorder traversal, applicable to both trees and graphs.","The conceptual approach of DFT mirrors preorder traversal; however, DFT is more general and applies to any graph structure, not just trees.",Depth First Traversal and Breadth First Traversal of Graph,Medium,7.2
What is a topological sort of a directed graph?,"['An ordering of vertices where edges can go in any direction.', 'A coloring of vertices to detect cycles.', 'An ordering of vertices such that all directed edges go from left to right.', 'A partitioning of vertices into disjoint sets.']",C,"A topological sort arranges vertices such that all directed edges point from left to right, ensuring that prerequisites are met before dependent tasks.","Topological sorting (Depth first, Breadth first topological sorting)",Easy,7.2
"In the context of course prerequisites, what does a topological ordering represent?","['A random listing of courses.', 'A listing of courses where prerequisites are listed after the courses they are prerequisites for.', 'A grouping of courses by difficulty level.', 'A listing of courses where all prerequisites for a course appear before it.']",D,A topological ordering of courses ensures that all prerequisites for a course are completed before that course is taken.,"Topological sorting (Depth first, Breadth first topological sorting)",Medium,7.2
Which algorithm can be used to find a topological ordering of a directed acyclic graph?,"[""Dijkstra's Algorithm"", ""Prim's Algorithm"", 'Breadth-First Search', 'Merge Sort']",C,Breadth-First Search (BFS) is one algorithm that can be adapted to find a topological ordering.,"Topological sorting (Depth first, Breadth first topological sorting)",Medium,7.2
A Breadth-First Topological ordering starts by identifying which vertices?,"['Vertices with the most outgoing edges.', 'Vertices with the most incoming edges.', 'Vertices with no incoming edges.', 'Vertices with no outgoing edges.']",C,"The algorithm begins with vertices that have no incoming edges, as these must come first in any valid topological ordering.","Topological sorting (Depth first, Breadth first topological sorting)",Medium,7.2
What is a necessary condition for a directed graph to have a topological ordering?,"['The graph must be connected.', 'The graph must be weighted.', 'The graph must be acyclic (contain no cycles).', 'The graph must be complete.']",C,A directed graph must be acyclic (contain no cycles) to have a topological ordering.  The presence of a cycle would create a circular dependency that cannot be resolved linearly.,"Topological sorting (Depth first, Breadth first topological sorting)",Medium,7.2
Which algorithm is mentioned as being particularly efficient when the number of edges in a graph is low?,"[""Prim's Algorithm"", ""Kruskal's Algorithm"", 'Round Robin Algorithm', ""Dijkstra's Algorithm""]",C,The passage explicitly states that the Round Robin Algorithm offers better performance with fewer edges.,"Minimum spanning trees (Prim’s, Kruskal’s and Round-Robin algorithms)",Easy,7.2
What is the relationship between the weight of a minimum spanning tree (T) and the weight of any other spanning tree (T') of the same graph G?,"[""W(T) > W(T')"", ""W(T) = W(T')"", ""W(T) < W(T')"", ""W(T) ≥ W(T')""]",D,The passage states that the weight of the minimum spanning tree is less than or equal to the weight of any other spanning tree.,"Minimum spanning trees (Prim’s, Kruskal’s and Round-Robin algorithms)",Medium,7.2
"In Kruskal's algorithm, what is the maximum number of edges selected to form the minimum spanning tree of a graph with 'n' vertices?","['n', 'n-1', 'n+1', 'n/2']",B,Kruskal's algorithm selects n-1 edges to form a minimum spanning tree in a graph with n vertices.  A tree with n vertices always has n-1 edges.,"Minimum spanning trees (Prim’s, Kruskal’s and Round-Robin algorithms)",Easy,7.2
The first step in Kruskal's algorithm involves:,"['Randomly selecting edges.', 'Selecting edges in decreasing order of weight.', 'Listing all edges in increasing order of weight.', ' Creating a cycle in the graph.']",C,The passage clearly states that the first step in Kruskal's algorithm is to list all edges in increasing order of weight.,"Minimum spanning trees (Prim’s, Kruskal’s and Round-Robin algorithms)",Easy,7.2
What is the key criterion for selecting edges during the iterative process of Kruskal's algorithm?,"['The edge must be the longest available.', ' The edge must create a cycle.', 'The edge must not create a cycle.', 'The edge must connect vertices of maximum degree.']",C,Kruskal's algorithm explicitly avoids creating cycles while building the minimum spanning tree.,"Minimum spanning trees (Prim’s, Kruskal’s and Round-Robin algorithms)",Medium,7.2
What is the primary goal of a single-source shortest path algorithm?,"['Find the shortest path between all pairs of vertices in a graph.', 'Find the shortest path from a single starting vertex to all other vertices in a graph.', 'Find the shortest path between two specific vertices in a graph.', 'Determine the total weight of all edges in a graph.']",B,A single-source shortest path algorithm aims to find the shortest path from one designated starting vertex to every other reachable vertex within the graph.,"Shortest-path algorithm (Greedy algorithm, and Dijkstra’s Algorithm)",Easy,7.2
"In Dijkstra's algorithm, what initial value is assigned to the distance (dv) from the source vertex (s) to all other vertices (v)?","['0', '1', '-1', 'Infinity']",D,"Initially, the distance from the source to all other vertices is assumed to be infinitely large, except for the source itself, which has a distance of 0.","Shortest-path algorithm (Greedy algorithm, and Dijkstra’s Algorithm)",Medium,7.2
Which type of shortest path problem seeks to find the shortest path between every pair of vertices in a graph?,"['Single path', 'Single source', 'All pairs', 'None of the above']",C,"The ""all pairs"" shortest path problem aims to identify the shortest paths between all possible combinations of vertices within the graph.","Shortest-path algorithm (Greedy algorithm, and Dijkstra’s Algorithm)",Easy,7.2
What characteristic best describes a greedy algorithm?,"['It always finds the optimal solution.', 'It considers all possible paths before selecting the best one.', 'It makes locally optimal choices at each step.', 'It is computationally very expensive.']",C,"Greedy algorithms make the best choice available at each step, without considering the overall optimal solution.  This often, but not always, leads to a good solution.","Shortest-path algorithm (Greedy algorithm, and Dijkstra’s Algorithm)",Medium,7.2
"In Dijkstra's algorithm,  a vertex is marked as ""known"" after which step?","['It is initially selected.', ""It's distance from the source is calculated."", 'It has the smallest distance among unknown vertices and is selected.', 'All its adjacent vertices are explored.']",C,A vertex is marked as known only after it has been selected as the vertex with the smallest distance among all the unknown vertices.,"Shortest-path algorithm (Greedy algorithm, and Dijkstra’s Algorithm)",Medium,7.2
