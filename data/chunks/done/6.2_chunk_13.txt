E T  
 
 
by  R2 
   T*F  
 
 
by  R3 
   T* (E)  
 
 
by R5 
  T* (E +T)  
 
 by R1 
 T * (T + T)  
 
by R2 
 T* (F + T)   
 
by R4 
 T* (id + T)   
 
by R6 
T* (id + F)   
 
by R4 
T * (id + id)  
 
by R6 
F * (id + id)  
 
by R4 
 (E) * (id + id)  
 
by R5 
 (E + T) * (id + id)   
by  R1 
 (E+F)*(id+ id)  
 
by R4 
 (E + id) * (id + id)   
by R6 
 (T + id) * (id + id)   
by R2 
 (T * F + id) * (id + id)  
 by R3 
 (F * F + id) * (id + id)  
by R4 
 (F * id + id) * (id + id) 
by R6 
 (id * id + id) * (id + id) 
 by R6 
 
 
 
ioenotes.edu.np

Example 3 
Design a CFG that generates all strings of properly balanced left and right parentheses: every left 
parenthesis can be paired with a unique subsequent right parenthesis, and every right parenthesis 
can be paired with a unique preceding left parenthesis.