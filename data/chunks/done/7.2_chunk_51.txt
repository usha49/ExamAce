For eg, given 100 slots array, we may use constant in
rehash function:
(old hash value + 3) % 100.Procedures of some Hash Resolutions:

Soring
9
An array is declared and each cell is assigned -1 to denote free cell.
int keys[10]; for (int i=0;
i<10; i++)
keys[i] = -1;
voidlinear_probing(int keys,
int target)
{ int rem; rem = target%10; if(keys[rem]
== -1; keys[rem] = target;
else
{ while(keys[rem] != -1)
{If(rem >= 10) rem = 0;
rem++; }
keys[rem] = target;
}
}
void double_hashing(int keys[], int target)
{ int rem; rem = key%10;
if(keys[rem] == -1) keys[rem] =
target;
else
{Rem = 7 â€“ (key%7)
while(keys[rem] != -1)
{ if(rem >= 10) rem = 0;
rem++; }
keys[rem]=target;
}
} void quadratic_probing(int keys[], int target)
{ int rem;rem = key%10;
if(keys[rem] == -1) keys[rem] =
target;
else
{ int x = 0; int h = rem;
while(keys[rem] != -1)
{ x++; int rem1 = h + pow(x,2); rem =
rem1%10;
}

Soring
10
keys[rem] = target;
}
}
Procedure for chaining: struct
chain
{ int data; struct chain *next;
}; typedef struct chain node; node *table[10]; Here, initially all the node pointers of the table
are initialized to NULL.