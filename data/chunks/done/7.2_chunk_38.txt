Hence, no.
of comparisons in binary search is O (log n), where n is the no of items in the list, Obviously
binary search is faster then sequential search, but there is an extra overhead in maintaining the
list ordered,For small lists, better to use sequential search
Binary search is best suited for lists that are constructed and sorted once, and then repeatedly
searched Binary Search Procedure
void binsrch( int a[], int beg, int end, int item)
{ int mid; int count = 0; mid =
(beg + end)/2; count ++;
while(beg <= end && item != a[mid])
{If(item < a[mid])
end = end + 1;
else
beg = beg + 1;
mid = (beg + end)/2; count ++;
}if(item == a[mid])
{ printf(“\nSearch Successful!!!\n It took %d iterations to find this item”, cnt); printf(“\nThe
position is %d”,mid);
}
else printf(“\n Search Unsuccessful”);
getch();
}
Hashing: “Derive a number from the key information given to you and use that number to
access all information related to the key”.